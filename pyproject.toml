[tool.poetry]
name = "pipeline"
version = "0.1.0"
description = "A modern Python data engineering pipeline application"
authors = ["Your Name <your.email@example.com>"]
readme = "README.md"
packages = [{include = "pipeline", from = "src"}]

[tool.poetry.dependencies]
python = "^3.11"
pydantic = "^2.0"
pydantic-settings = "^2.0"
structlog = "^23.0"
click = "^8.0"
python-dotenv = "^1.0"
httpx = "^0.25"
pandas = "^2.0"
sqlalchemy = "^2.0"
alembic = "^1.12"

[tool.poetry.group.dev.dependencies]
pytest = "^7.0"
pytest-asyncio = "^0.21"
pytest-cov = "^4.0"
black = "^23.0"
isort = "^5.12"
flake8 = "^6.0"
mypy = "^1.5"
pre-commit = "^3.4"
bandit = "^1.7"
safety = "^2.3"

[tool.poetry.group.test.dependencies]
pytest-mock = "^3.11"
factory-boy = "^3.3"
freezegun = "^1.2"

[tool.poetry.scripts]
pipeline = "pipeline.cli:main"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

# Black configuration
[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

# isort configuration
[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["pipeline"]

# pytest configuration
[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

# Coverage configuration
[tool.coverage.run]
source = ["src"]
omit = ["*/tests/*", "*/venv/*", "*/.venv/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
]

# MyPy configuration
[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "pandas.*",
    "sqlalchemy.*",
]
ignore_missing_imports = true
